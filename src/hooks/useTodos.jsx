// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ö—É–∫–∏ –∏–∑ React
import { useState, useEffect, useRef } from 'react';
// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç API
import apiClient from '../api/client.jsx';

/**
 * –ö–∞—Å—Ç–æ–º–Ω—ã–π —Ö—É–∫ useTodos –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API –∑–∞–¥–∞—á
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É, —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –∑–∞–¥–∞—á
 * @param {Object} params - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
 * @param {number|null} params.userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ null –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 * @param {string} params.status - –°—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á: 'all' (–≤—Å–µ) | 'completed' (–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ) | 'active' (–∞–∫—Ç–∏–≤–Ω—ã–µ)
 * @param {string} params.sort - –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏: 'desc' (–ø–æ —É–±—ã–≤–∞–Ω–∏—é) | 'asc' (–ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é)
 * @returns {Object} - –û–±—ä–µ–∫—Ç —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º: { todos, loading, error }
 */
export const useTodos = ({ userId = null, status = 'all', sort = 'desc' } = {}) => {
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –º–∞—Å—Å–∏–≤–∞ –∑–∞–¥–∞—á
  const [todos, setTodos] = useState([]);
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∏–Ω–¥–∏–∫–∞—Ü–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏
  const [loading, setLoading] = useState(false);
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—à–∏–±–æ–∫
  const [error, setError] = useState(null);
  
  // –†–µ—Ñ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è AbortController —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ (–¥–ª—è –æ—Ç–º–µ–Ω—ã)
  const abortControllerRef = useRef(null);

  // –û—Å–Ω–æ–≤–Ω–æ–π —ç—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–¥–∞—á –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
  useEffect(() => {
    // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–¥–∞—á
    const fetchTodos = async () => {
      try {
        // –û—Ç–º–µ–Ω—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∑–∞–ø—Ä–æ—Å, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if (abortControllerRef.current) {
          abortControllerRef.current.abort();
        }

        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π AbortController –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
        abortControllerRef.current = new AbortController();
        // –ü–æ–ª—É—á–∞–µ–º signal –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ –∑–∞–ø—Ä–æ—Å
        const signal = abortControllerRef.current.signal;

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏
        setLoading(true);
        setError(null);

        // –§–æ—Ä–º–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
        const params = {};
        
        // –î–æ–±–∞–≤–ª—è–µ–º userId –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –µ—Å–ª–∏ –æ–Ω —É–∫–∞–∑–∞–Ω (–Ω–µ null)
        if (userId !== null) {
          params.userId = userId;
        }

        // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–ª—å—Ç—Ä –ø–æ —Å—Ç–∞—Ç—É—Å—É completed, –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –Ω–µ 'all'
        if (status !== 'all') {
          // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –≤ boolean
          params.completed = status === 'completed';
        }

        // –õ–æ–≥–∏—Ä—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        console.log('üîç Fetching todos with params:', params);

        // –í—ã–ø–æ–ª–Ω—è–µ–º GET-–∑–∞–ø—Ä–æ—Å –∫ API /todos —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        const response = await apiClient.get('/todos', {
          params, // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
          signal, // Signal –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ—Ç–º–µ–Ω—ã –∑–∞–ø—Ä–æ—Å–∞
        });

        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ—Ç–≤–µ—Ç–∞
        let fetchedTodos = response.data;

        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∫–ª–∏–µ–Ω—Ç—Å–∫–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Å—Ç–∞—Ç—É—Å—É (–Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–ª)
        if (status !== 'all') {
          // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–µ–ª–µ–≤–æ–π —Å—Ç–∞—Ç—É—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
          const isCompleted = status === 'completed';
          // –§–∏–ª—å—Ç—Ä—É–µ–º –∑–∞–¥–∞—á–∏ –ø–æ —Å—Ç–∞—Ç—É—Å—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
          fetchedTodos = fetchedTodos.filter(todo => todo.completed === isCompleted);
        }

        // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∑–∞–¥–∞—á –ø–æ ID (–∏—Å–ø–æ–ª—å–∑—É–µ–º ID –∫–∞–∫ –ø—Ä–æ–∫—Å–∏ –¥–ª—è –¥–∞—Ç—ã —Å–æ–∑–¥–∞–Ω–∏—è)
        fetchedTodos.sort((a, b) => {
          if (sort === 'desc') {
            // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —É–±—ã–≤–∞–Ω–∏—é (–Ω–æ–≤—ã–µ —Å–Ω–∞—á–∞–ª–∞ - –±–æ–ª—å—à–∏–π ID)
            return b.id - a.id;
          } else {
            // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é (—Å—Ç–∞—Ä—ã–µ —Å–Ω–∞—á–∞–ª–∞ - –º–µ–Ω—å—à–∏–π ID)
            return a.id - b.id;
          }
        });

        // –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É
        console.log(`‚úÖ Fetched ${fetchedTodos.length} todos`);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å –ø–æ–ª—É—á–µ–Ω–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏
        setTodos(fetchedTodos);
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏
        setError(null);
      } catch (err) {
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –æ—Ç–º–µ–Ω—ã –∑–∞–ø—Ä–æ—Å–∞ (AbortError)
        if (err.name === 'CanceledError' || err.name === 'AbortError') {
          console.log('üö´ Request was cancelled');
          return;
        }

        // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        console.error('‚ùå Error fetching todos:', err);
        
        // –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        let errorMessage = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∑–∞–¥–∞—á';
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –æ—à–∏–±–æ–∫
        if (err.code === 'ECONNABORTED') {
          // –û—à–∏–±–∫–∞ —Ç–∞–π–º–∞—É—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞
          errorMessage = '–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞';
        } else if (err.response) {
          // –û—à–∏–±–∫–∞ —Å –æ—Ç–≤–µ—Ç–æ–º –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
          const status = err.response.status;
          if (status >= 500) {
            // –°–µ—Ä–≤–µ—Ä–Ω—ã–µ –æ—à–∏–±–∫–∏ (5xx)
            errorMessage = '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ';
          } else if (status === 404) {
            // –†–µ—Å—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω
            errorMessage = '–î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã';
          } else if (status >= 400) {
            // –ö–ª–∏–µ–Ω—Ç—Å–∫–∏–µ –æ—à–∏–±–∫–∏ (4xx)
            errorMessage = '–ù–µ–≤–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å';
          }
        } else if (!navigator.onLine) {
          // –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
          errorMessage = '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º';
        }

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        setError(errorMessage);
        // –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –ø—Ä–∏ –æ—à–∏–±–∫–µ
        setTodos([]);
      } finally {
        // –í –ª—é–±–æ–º —Å–ª—É—á–∞–µ —Å–Ω–∏–º–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
        setLoading(false);
      }
    };

    // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–¥–∞—á
    fetchTodos();

    // –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ —ç—Ñ—Ñ–µ–∫—Ç–∞: –æ—Ç–º–µ–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏–ª–∏ —Å–º–µ–Ω–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    return () => {
      if (abortControllerRef.current) {
        abortControllerRef.current.abort();
      }
    };
  }, [userId, status, sort]); // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–∏ –ø–æ–ª–Ω–æ–º —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    return () => {
      if (abortControllerRef.current) {
        abortControllerRef.current.abort();
      }
    };
  }, []); // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π - –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏

  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ä–µ–∫—Ç —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
  return {
    todos,    // –ú–∞—Å—Å–∏–≤ –∑–∞–¥–∞—á
    loading,  // –§–ª–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏
    error,    // –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ (–∏–ª–∏ null)
  };
};






